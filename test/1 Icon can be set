#!/usr/bin/env bash

# ---
# IMPORTANT: Use the following statement at the TOP OF EVERY TEST SCRIPT
#            to ensure that this package's 'bin/' subfolder is added to the path so that
#            this package's CLIs can be invoked by their mere filename in the rest
#            of the script.
# ---
PATH=${PWD%%/test*}/bin:$PATH

# Helper function for error reporting.
die() { (( $# > 0 )) && echo "ERROR: $*" >&2; exit 1; }

# Create a temp. dir.
tmpDir=$(mktemp -d -t XXXX) # Works on both macOS and Linux; note: dir. name will have random extension on OSX (e.g., '.../XXXX.bJViLcM3') and none on Linux (e.g., '.../vXDA')
trap 'rm -rf "$tmpDir"' EXIT # Set up exit trap to automatically clean up the temp dir.

# Copy fixtures to temp. dir.
cp -R ./.fixtures/* "$tmpDir/" || die

# Change to temp dir.
cd "$tmpDir" || die

# --- file

# Set custom icon.
fileicon set file img.png || die "Failed to set."

# Verify that icon was set.
attribNamesFound=$(xattr file)
for attribName in 'com.apple.FinderInfo' 'com.apple.ResourceFork'; do
  grep -Fqx "$attribName" <<<"$attribNamesFound" || die "Extended attribute not present: $attribName"
done

# --- folder

# !! Note: While *volumes* are now supported in principle as well (folders that act as volume mountpoints),
# !!       as of macOS 13.1 we haven't found a way to actually set them predictably: the Cocoa API call only *half*
# !!       succeeds: it creates the .VolumeIcon.icns helper file, but quietly fails to set the custom-icon flag
# !!       in the 'com.apple.FinderInfo' extended attribute. See the comments on setCustomIcon() for more information.
# !!       Therefore, we can NOT test with volume mountpoints.

# Set custom icon.
fileicon set folder img.png || die "Failed to set."

# Verify that icon was set.
# Folder itself
attribName='com.apple.FinderInfo'
attribNamesFound=$(xattr folder)
grep -Fqx "$attribName" <<<"$attribNamesFound" || die "Extended attribute not present: $attribName"

# Hidden file inside folder with actual image data in resource fork.
attribNamesFound=$(xattr folder/$'Icon\r')
for attribName in 'com.apple.FinderInfo' 'com.apple.ResourceFork'; do
  grep -Fqx "$attribName" <<<"$attribNamesFound" || die "Extended attribute not present: $attribName"
done
